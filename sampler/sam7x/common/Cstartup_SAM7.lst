   1              		.file	"Cstartup_SAM7.c"
   9              	.Ltext0:
  10              		.section	.text.AT91F_LowLevelInit,"ax",%progbits
  11              		.align	2
  12              		.global	AT91F_LowLevelInit
  14              	AT91F_LowLevelInit:
  15              	.LFB290:
  16              		.file 1 "common/Cstartup_SAM7.c"
   0:common/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
   1:common/Cstartup_SAM7.c **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   2:common/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
   3:common/Cstartup_SAM7.c **** //* The software is delivered "AS IS" without warranty or condition of any
   4:common/Cstartup_SAM7.c **** //* kind, either express, implied or statutory. This includes without
   5:common/Cstartup_SAM7.c **** //* limitation any warranty or condition with respect to merchantability or
   6:common/Cstartup_SAM7.c **** //* fitness for any particular purpose, or against the infringements of
   7:common/Cstartup_SAM7.c **** //* intellectual property rights of others.
   8:common/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
   9:common/Cstartup_SAM7.c **** //* File Name           : Cstartup_SAM7.c
  10:common/Cstartup_SAM7.c **** //* Object              : Low level initializations written in C for Tools
  11:common/Cstartup_SAM7.c **** //* Creation            : 12/Jun/04
  12:common/Cstartup_SAM7.c **** //* 1.2   28/Feb/05 JPP : LIB change AT91C_WDTC_WDDIS & PLL
  13:common/Cstartup_SAM7.c **** //* 1.3   21/Mar/05 JPP : Change PLL Wait time
  14:common/Cstartup_SAM7.c **** //* 1.4   21/Aug/05 JPP : Change MC_FMR Setting
  15:common/Cstartup_SAM7.c **** //* 1.5   29/Aug/05 JPP : Change PLL error
  16:common/Cstartup_SAM7.c **** //* 1.6   13/oct/05 JPP : Change comment
  17:common/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  18:common/Cstartup_SAM7.c **** 
  19:common/Cstartup_SAM7.c **** // Include the board file description
  20:common/Cstartup_SAM7.c **** #include "Board.h"
  21:common/Cstartup_SAM7.c **** 
  22:common/Cstartup_SAM7.c **** // The following functions must be write in ARM mode this function called directly
  23:common/Cstartup_SAM7.c **** // by exception vector
  24:common/Cstartup_SAM7.c **** extern void AT91F_Spurious_handler(void);
  25:common/Cstartup_SAM7.c **** extern void AT91F_Default_IRQ_handler(void);
  26:common/Cstartup_SAM7.c **** extern void AT91F_Default_FIQ_handler(void);
  27:common/Cstartup_SAM7.c **** 
  28:common/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  29:common/Cstartup_SAM7.c **** //* \fn    AT91F_LowLevelInit
  30:common/Cstartup_SAM7.c **** //* \brief This function performs very low level HW initialization
  31:common/Cstartup_SAM7.c **** //*        this function can be use a Stack, depending the compilation
  32:common/Cstartup_SAM7.c **** //*        optimization mode
  33:common/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  34:common/Cstartup_SAM7.c **** void AT91F_LowLevelInit( void)
  35:common/Cstartup_SAM7.c **** {
  17              		.loc 1 36 0
  18              		@ Function supports interworking.
  19              		@ args = 0, pretend = 0, frame = 0
  20              		@ frame_needed = 0, uses_anonymous_args = 0
  21              		@ link register save eliminated.
  36:common/Cstartup_SAM7.c ****  int            i;
  37:common/Cstartup_SAM7.c ****  AT91PS_PMC     pPMC = AT91C_BASE_PMC;
  38:common/Cstartup_SAM7.c ****     //* Set Flash Waite sate
  39:common/Cstartup_SAM7.c **** 	//  Single Cycle Access at Up to 30 MHz, or 40
  40:common/Cstartup_SAM7.c **** 	    AT91C_BASE_MC->MC_FMR = AT91C_MC_FWS_1FWS ;
  22              		.loc 1 41 0
  23 0000 0030E0E3 		mvn	r3, #0
  41:common/Cstartup_SAM7.c **** 
  42:common/Cstartup_SAM7.c ****     //* Watchdog Disable
  43:common/Cstartup_SAM7.c ****         AT91C_BASE_WDTC->WDTC_WDMR= AT91C_WDTC_WDDIS;
  44:common/Cstartup_SAM7.c **** 
  45:common/Cstartup_SAM7.c **** 	//* Set MCK at 48 054 850
  46:common/Cstartup_SAM7.c ****     // 1 Enabling the Main Oscillator:
  47:common/Cstartup_SAM7.c ****         // SCK = 1/32768 = 30.51 uSecond
  48:common/Cstartup_SAM7.c ****     	// Start up time = 8 * 6 / SCK = 56 * 30.51 = 1,46484375 ms
  49:common/Cstartup_SAM7.c ****        // mthomas-avoid warning pPMC->PMC_MOR = (( AT91C_CKGR_OSCOUNT & (0x06 <<8) | AT91C_CKGR_MOS
  50:common/Cstartup_SAM7.c **** 	   pPMC->PMC_MOR = ( (( AT91C_CKGR_OSCOUNT & (0x06 <<8)) | AT91C_CKGR_MOSCEN ));
  24              		.loc 1 51 0
  25 0004 060CA0E3 		mov	r0, #1536
  41:common/Cstartup_SAM7.c **** 
  26              		.loc 1 41 0
  27 0008 012CA0E3 		mov	r2, #256
  28 000c 9F2003E5 		str	r2, [r3, #-159]
  29              		.loc 1 51 0
  30 0010 010080E2 		add	r0, r0, #1
  31 0014 03CCE0E3 		mvn	ip, #768
  44:common/Cstartup_SAM7.c ****         AT91C_BASE_WDTC->WDTC_WDMR= AT91C_WDTC_WDDIS;
  32              		.loc 1 44 0
  33 0018 0219A0E3 		mov	r1, #32768
  34 001c 023C43E2 		sub	r3, r3, #512
  35 0020 BB1003E5 		str	r1, [r3, #-187]
  36              		.loc 1 51 0
  37 0024 DF000CE5 		str	r0, [ip, #-223]
  38              	.L2:
  51:common/Cstartup_SAM7.c ****         // Wait the startup time
  52:common/Cstartup_SAM7.c ****         while(!(pPMC->PMC_SR & AT91C_PMC_MOSCS));
  39              		.loc 1 53 0
  40 0028 97301CE5 		ldr	r3, [ip, #-151]
  41 002c 010013E3 		tst	r3, #1
  42 0030 032CE0E3 		mvn	r2, #768
  43 0034 FBFFFF0A 		beq	.L2
  53:common/Cstartup_SAM7.c **** 	// 2 Checking the Main Oscillator Frequency (Optional)
  54:common/Cstartup_SAM7.c **** 	// 3 Setting PLL and divider:
  55:common/Cstartup_SAM7.c **** 		// - div by 14 Fin = 1.3165 =(18,432 / 14)
  56:common/Cstartup_SAM7.c **** 		// - Mul 72+1: Fout =	96.1097 =(3,6864 *73)
  57:common/Cstartup_SAM7.c **** 		// for 96 MHz the erroe is 0.11%
  58:common/Cstartup_SAM7.c **** 		// Field out NOT USED = 0
  59:common/Cstartup_SAM7.c **** 		// PLLCOUNT pll startup time estimate at : 0.844 ms
  60:common/Cstartup_SAM7.c **** 		// PLLCOUNT 28 = 0.000844 /(1/32768)
  61:common/Cstartup_SAM7.c ****        pPMC->PMC_PLLR = ((AT91C_CKGR_DIV & 14 ) |
  44              		.loc 1 62 0
  45 0038 1237A0E3 		mov	r3, #4718592
  46 003c 073B83E2 		add	r3, r3, #7168
  47 0040 0E3083E2 		add	r3, r3, #14
  48 0044 D33002E5 		str	r3, [r2, #-211]
  49              	.L3:
  62:common/Cstartup_SAM7.c ****                          (AT91C_CKGR_PLLCOUNT & (28<<8)) |
  63:common/Cstartup_SAM7.c ****                          (AT91C_CKGR_MUL & (72<<16)));
  64:common/Cstartup_SAM7.c **** 
  65:common/Cstartup_SAM7.c **** 
  66:common/Cstartup_SAM7.c ****         // Wait the startup time
  67:common/Cstartup_SAM7.c ****         while(!(pPMC->PMC_SR & AT91C_PMC_LOCK));
  50              		.loc 1 68 0
  51 0048 973012E5 		ldr	r3, [r2, #-151]
  52 004c 040013E3 		tst	r3, #4
  53 0050 FCFFFF0A 		beq	.L3
  68:common/Cstartup_SAM7.c ****         while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
  54              		.loc 1 69 0
  55 0054 031CE0E3 		mvn	r1, #768
  56              	.L9:
  57 0058 973011E5 		ldr	r3, [r1, #-151]
  58 005c 080013E3 		tst	r3, #8
  59 0060 032CE0E3 		mvn	r2, #768
  60 0064 FBFFFF0A 		beq	.L9
  69:common/Cstartup_SAM7.c ****  	// 4. Selection of Master Clock and Processor Clock
  70:common/Cstartup_SAM7.c ****  	// select the PLL clock divided by 2
  71:common/Cstartup_SAM7.c ****  	    pPMC->PMC_MCKR =  AT91C_PMC_PRES_CLK_2 ;
  61              		.loc 1 72 0
  62 0068 0430A0E3 		mov	r3, #4
  63 006c CF3002E5 		str	r3, [r2, #-207]
  72:common/Cstartup_SAM7.c ****  	    while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
  64              		.loc 1 73 0
  65 0070 0210A0E1 		mov	r1, r2
  66              	.L5:
  67 0074 973011E5 		ldr	r3, [r1, #-151]
  68 0078 080013E3 		tst	r3, #8
  69 007c 032CE0E3 		mvn	r2, #768
  70 0080 FBFFFF0A 		beq	.L5
  73:common/Cstartup_SAM7.c **** 
  74:common/Cstartup_SAM7.c ****  	    pPMC->PMC_MCKR |= AT91C_PMC_CSS_PLL_CLK  ;
  71              		.loc 1 75 0
  72 0084 CF3012E5 		ldr	r3, [r2, #-207]
  73 0088 033083E3 		orr	r3, r3, #3
  74 008c CF3002E5 		str	r3, [r2, #-207]
  75              	.L6:
  75:common/Cstartup_SAM7.c ****  	    while(!(pPMC->PMC_SR & AT91C_PMC_MCKRDY));
  76              		.loc 1 76 0
  77 0090 973012E5 		ldr	r3, [r2, #-151]
  78 0094 080013E3 		tst	r3, #8
  79 0098 FCFFFF0A 		beq	.L6
  76:common/Cstartup_SAM7.c **** 
  77:common/Cstartup_SAM7.c **** 	// Set up the default interrupts handler vectors
  78:common/Cstartup_SAM7.c **** 	AT91C_BASE_AIC->AIC_SVR[0] = (int) AT91F_Default_FIQ_handler ;
  80              		.loc 1 79 0
  81 009c 34309FE5 		ldr	r3, .L17
  82 00a0 0F2CE0E3 		mvn	r2, #3840
  83 00a4 30109FE5 		ldr	r1, .L17+4
  84 00a8 7F3002E5 		str	r3, [r2, #-127]
  85 00ac 0120A0E3 		mov	r2, #1
  86              	.LVL0:
  87              	.L7:
  79:common/Cstartup_SAM7.c **** 	for (i=1;i < 31; i++)
  80:common/Cstartup_SAM7.c **** 	{
  81:common/Cstartup_SAM7.c **** 	    AT91C_BASE_AIC->AIC_SVR[i] = (int) AT91F_Default_IRQ_handler ;
  88              		.loc 1 82 0
  89 00b0 0231A0E1 		mov	r3, r2, asl #2
  80:common/Cstartup_SAM7.c **** 	for (i=1;i < 31; i++)
  90              		.loc 1 80 0
  91 00b4 012082E2 		add	r2, r2, #1
  92              		.loc 1 82 0
  93 00b8 3E3D43E2 		sub	r3, r3, #3968
  80:common/Cstartup_SAM7.c **** 	for (i=1;i < 31; i++)
  94              		.loc 1 80 0
  95 00bc 1F0052E3 		cmp	r2, #31
  96              		.loc 1 82 0
  97 00c0 001083E5 		str	r1, [r3, #0]
  80:common/Cstartup_SAM7.c **** 	for (i=1;i < 31; i++)
  98              		.loc 1 80 0
  99 00c4 F9FFFF1A 		bne	.L7
  82:common/Cstartup_SAM7.c **** 	}
  83:common/Cstartup_SAM7.c **** 	AT91C_BASE_AIC->AIC_SPU  = (int) AT91F_Spurious_handler ;
 100              		.loc 1 84 0
 101 00c8 10209FE5 		ldr	r2, .L17+8
 102              	.LVL1:
 103 00cc 0F3CE0E3 		mvn	r3, #3840
 104 00d0 352083E5 		str	r2, [r3, #53]
  84:common/Cstartup_SAM7.c **** 
  85:common/Cstartup_SAM7.c **** }
 105              		.loc 1 86 0
 106 00d4 1EFF2FE1 		bx	lr
 107              	.L18:
 108              		.align	2
 109              	.L17:
 110 00d8 00000000 		.word	AT91F_Default_FIQ_handler
 111 00dc 00000000 		.word	AT91F_Default_IRQ_handler
 112 00e0 00000000 		.word	AT91F_Spurious_handler
 113              	.LFE290:
 139              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Cstartup_SAM7.c
/var/folders/pZ/pZ2MBgpiHeKeZJFP2+bcbk+++TI/-Tmp-//cct1tPv5.s:11     .text.AT91F_LowLevelInit:0000000000000000 $a
/var/folders/pZ/pZ2MBgpiHeKeZJFP2+bcbk+++TI/-Tmp-//cct1tPv5.s:14     .text.AT91F_LowLevelInit:0000000000000000 AT91F_LowLevelInit
/var/folders/pZ/pZ2MBgpiHeKeZJFP2+bcbk+++TI/-Tmp-//cct1tPv5.s:110    .text.AT91F_LowLevelInit:00000000000000d8 $d
/var/folders/pZ/pZ2MBgpiHeKeZJFP2+bcbk+++TI/-Tmp-//cct1tPv5.s:128    .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
AT91F_Default_FIQ_handler
AT91F_Default_IRQ_handler
AT91F_Spurious_handler
